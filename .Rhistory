library(rgdal)
hucs <- readOGR(dsn = './data', layer = 'HUCs', verbose = F)
plot(hucs)
hucs <- readOGR(dsn = 'data', layer = 'HUCs', verbose = F)
library(tidyverse)
library(readxl)
dat <- read_excel('Z:/MarcusBeck/From Nabiul/I_O.xlsx')
head(dat)
tab <- read_excel('Z:/MarcusBeck/From Nabiul/New_Name.xlsx')
head(tab)
library(tidyverse)
library(readxl)
dat <- read_excel('Z:/MarcusBeck/From Nabiul/I_O.xlsx')
tab <- read_excel('Z:/MarcusBeck/From Nabiul/New_Name.xlsx')
dat <- dat %>%
left_join(tab, by = 'MSNAME')
View(dat)
?left_join
dat <- read_excel('Z:/MarcusBeck/From Nabiul/I_O.xlsx')
tab <- read_excel('Z:/MarcusBeck/From Nabiul/New_Name.xlsx')
datjn <- dat %>%
left_join(tab, by = 'MSNAME')
dim(dat)
datjn %>% dim
head(datjn)
is.na(datjn$MSNAME__1)
is.na(datjn$MSNAME__1) %>% sum
anyNA(datjn$MSNAME__1)
View(datjn)
head(datjn)
datjn <- dat %>%
left_join(tab, by = 'MSNAME') %>%
select(SITENAME, `Storm #`, `WQ Analysis Value`, MSNAME_1)
datjn <- dat %>%
left_join(tab, by = 'MSNAME') %>%
select(SITENAME, `Storm #`, `WQ Analysis Value`, MSNAME__1)
head(datjn)
datjn <- dat %>%
left_join(tab, by = 'MSNAME') %>%
select(SITENAME, `Storm #`, `WQ Analysis Value`, MSNAME__1) %>%
spread(MSNAME__1, `WQ Analysis Value`)
head(dat)
datjn <- dat %>%
left_join(tab, by = 'MSNAME') %>%
select(SITENAME, MSNAME, `Storm #`, `WQ Analysis Value`, MSNAME__1) %>%
spread(MSNAME__1, `WQ Analysis Value`)
datjn <- dat %>%
left_join(tab, by = 'MSNAME') %>%
spread(MSNAME__1, `WQ Analysis Value`)
datjn <- dat %>%
left_join(tab, by = 'MSNAME')
datjn[c(193:194), ]
datjn[c(45, 46), ]
datjn <- dat %>%
left_join(tab, by = 'MSNAME') %>%
mutate(id = 1:nrow(.)) %>%
spread(MSNAME__1, `WQ Analysis Value`)
View(datjn)
datjn <- dat %>%
left_join(tab, by = 'MSNAME')
head(datjn)
datjn <- dat %>%
left_join(tab, by = 'MSNAME') %>%
select(-SAMPLEDATE, -`WQ Units`, -SITENAME)
head(datjn)
datjn <- dat %>%
left_join(tab, by = 'MSNAME') %>%
select(-SAMPLEDATE, -`WQ Units`, -SITENAME) %>%
group_by(MSNAME, `Storm #`, MSNAME_1) %>%
mutate(rep = seq(1:(.)))
datjn <- dat %>%
left_join(tab, by = 'MSNAME') %>%
select(-SAMPLEDATE, -`WQ Units`, -SITENAME) %>%
group_by(MSNAME, `Storm #`, MSNAME__1) %>%
mutate(rep = seq(1:(.)))
datjn <- dat %>%
left_join(tab, by = 'MSNAME') %>%
select(-SAMPLEDATE, -`WQ Units`, -SITENAME) %>%
group_by(MSNAME, `Storm #`, MSNAME__1)
datjn
datjn <- dat %>%
left_join(tab, by = 'MSNAME') %>%
select(-SAMPLEDATE, -`WQ Units`, -SITENAME) %>%
group_by(MSNAME, `Storm #`, MSNAME__1) %>%
mutate(repv = seq(1:nrow(.)))
datjn <- dat %>%
left_join(tab, by = 'MSNAME') %>%
select(-SAMPLEDATE, -`WQ Units`, -SITENAME) %>%
group_by(MSNAME, `Storm #`, MSNAME__1) %>%
mutate(
repv = 1,
repv = cumsum(repv)
)
datjn
View(datjn)
datjn <- dat %>%
left_join(tab, by = 'MSNAME') %>%
select(-SAMPLEDATE, -`WQ Units`, -SITENAME) %>%
group_by(MSNAME, `Storm #`, MSNAME__1) %>%
summarise(value = mean(value))
datjn <- dat %>%
left_join(tab, by = 'MSNAME') %>%
select(-SAMPLEDATE, -`WQ Units`, -SITENAME) %>%
group_by(MSNAME, `Storm #`, MSNAME__1) %>%
summarise(value = mean(`WQ Analsis Value`))
datjn <- dat %>%
left_join(tab, by = 'MSNAME') %>%
select(-SAMPLEDATE, -`WQ Units`, -SITENAME) %>%
group_by(MSNAME, `Storm #`, MSNAME__1) %>%
summarise(value = mean(`WQ Analysis Value`))
head(datjn)
dim(datjn)
dim(dat)
datjn <- dat %>%
left_join(tab, by = 'MSNAME') %>%
select(-SAMPLEDATE, -`WQ Units`, -SITENAME) %>%
group_by(MSNAME, `Storm #`, MSNAME__1) %>%
summarise(value = mean(`WQ Analysis Value`)) %>%
ungroup %>%
spread(MSNAME__, value)
datjn <- dat %>%
left_join(tab, by = 'MSNAME') %>%
select(-SAMPLEDATE, -`WQ Units`, -SITENAME) %>%
group_by(MSNAME, `Storm #`, MSNAME__1) %>%
summarise(value = mean(`WQ Analysis Value`)) %>%
ungroup %>%
spread(MSNAME__1, value)
head(datjn)
View(datjn)
datjn <- dat %>%
left_join(tab, by = 'MSNAME') %>%
select(-SAMPLEDATE, -`WQ Units`) %>%
group_by(MSNAME, `Storm #`, SITENAME, MSNAME__1) %>%
summarise(value = mean(`WQ Analysis Value`)) %>%
ungroup %>%
select(-MSNAME__1) %>%
spread(MSNAME__1, value)
datjn <- dat %>%
left_join(tab, by = 'MSNAME') %>%
select(-SAMPLEDATE, -`WQ Units`) %>%
group_by(MSNAME, `Storm #`, SITENAME, MSNAME__1) %>%
summarise(value = mean(`WQ Analysis Value`)) %>%
ungroup
head(datjn)
datjn <- dat %>%
left_join(tab, by = 'MSNAME') %>%
select(-SAMPLEDATE, -`WQ Units`) %>%
group_by(MSNAME, `Storm #`, SITENAME, MSNAME__1) %>%
summarise(value = mean(`WQ Analysis Value`)) %>%
ungroup %>%
select(-MSNAME)
datjn <- dat %>%
left_join(tab, by = 'MSNAME') %>%
select(-SAMPLEDATE, -`WQ Units`) %>%
group_by(MSNAME, `Storm #`, SITENAME, MSNAME__1) %>%
summarise(value = mean(`WQ Analysis Value`)) %>%
ungroup %>%
select(-MSNAME) %>%
spread(MSNAME__1, value)
datjn <- dat %>%
left_join(tab, by = 'MSNAME') %>%
select(-SAMPLEDATE, -`WQ Units`) %>%
group_by(MSNAME, `Storm #`, SITENAME, MSNAME__1)
head(datjn)
datjn <- dat %>%
left_join(tab, by = 'MSNAME') %>%
select(-SAMPLEDATE, -`WQ Units`) %>%
group_by(MSNAME, `Storm #`, SITENAME, MSNAME__1) %>%
summarise(value = mean(`WQ Analysis Value`)) %>%
ungroup %>%
select(-MSNAME)
dat %>%
left_join(tab, by = 'MSNAME') %>%
select(-SAMPLEDATE, -`WQ Units`) %>%
group_by(MSNAME, `Storm #`, SITENAME, MSNAME__1) %>%
summarise(value = mean(`WQ Analysis Value`)) %>%
ungroup %>%
select(-MSNAME, -SITENAME) %>%
spread(MSNAME__1, value)
datjn <- dat %>%
left_join(tab, by = 'MSNAME') %>%
select(-SAMPLEDATE, -`WQ Units`) %>%
group_by(MSNAME, `Storm #`, SITENAME, MSNAME__1) %>%
summarise(value = mean(`WQ Analysis Value`)) %>%
ungroup %>%
select(-MSNAME) %>%
spread(MSNAME__1, value)
datjn <- dat %>%
left_join(tab, by = 'MSNAME') %>%
select(-SAMPLEDATE, -`WQ Units`) %>%
group_by(MSNAME, `Storm #`, SITENAME, MSNAME__1) %>%
summarise(value = mean(`WQ Analysis Value`)) %>%
ungroup %>%
# select(-MSNAME) %>%
spread(MSNAME__1, value)
datjn <- dat %>%
left_join(tab, by = 'MSNAME') %>%
select(-SAMPLEDATE, -`WQ Units`) %>%
group_by(MSNAME, `Storm #`, SITENAME, MSNAME__1) %>%
summarise(value = mean(`WQ Analysis Value`)) %>%
ungroup %>%
# select(-MSNAME) %>%
spread(MSNAME__1, value)
head(datjn)
head(dat)
dat %>%
left_join(tab, by = 'MSNAME') %>%
select(-SAMPLEDATE, -`WQ Units`) %>%
group_by(MSNAME, `Storm #`, SITENAME, MSNAME, MSNAME_1) %>%
summarise(value = mean(`WQ Analysis Value`)) %>%
ungroup %>%
select(-MSNAME) %>%
spread(MSNAME__1, value)
dat %>%
left_join(tab, by = 'MSNAME') %>%
select(-SAMPLEDATE, -`WQ Units`) %>%
group_by(MSNAME, `Storm #`, SITENAME, MSNAME, MSNAME__1) %>%
summarise(value = mean(`WQ Analysis Value`)) %>%
ungroup %>%
select(-MSNAME) %>%
spread(MSNAME__1, value)
datjn <- dat %>%
left_join(tab, by = 'MSNAME') %>%
select(-SAMPLEDATE, -`WQ Units`) %>%
group_by(MSNAME, `Storm #`, SITENAME, MSNAME, MSNAME__1) %>%
summarise(value = mean(`WQ Analysis Value`)) %>%
ungroup %>%
select(-MSNAME) %>%
spread(MSNAME__1, value)
datjn <- dat %>%
left_join(tab, by = 'MSNAME') %>%
select(-SAMPLEDATE, -`WQ Units`) %>%
group_by(MSNAME, `Storm #`, SITENAME, MSNAME, MSNAME__1) %>%
summarise(value = mean(`WQ Analysis Value`)) %>%
ungroup %>%
select(-MSNAME)
datjn[c(203, 280), ]
datjn[c(204, 281), ]
datjn <- dat %>%
left_join(tab, by = 'MSNAME') %>%
select(-SAMPLEDATE, -`WQ Units`) %>%
group_by(MSNAME, `Storm #`, SITENAME, MSNAME, MSNAME__1) %>%
summarise(value = mean(`WQ Analysis Value`)) %>%
ungroup %>%
select(-MSNAME)
datjn
dim(datjn)
dim(unique(datjn))
datjn[c(224, 301),]
datjn <- dat %>%
left_join(tab, by = 'MSNAME') %>%
select(-SAMPLEDATE, -`WQ Units`) %>%
group_by(MSNAME, `Storm #`, SITENAME, MSNAME, MSNAME__1) %>%
summarise(value = mean(`WQ Analysis Value`)) %>%
ungroup %>%
select(-MSNAME) %>%
unique %>%
spread(MSNAME__1, value)
datjn <- dat %>%
left_join(tab, by = 'MSNAME') %>%
select(-SAMPLEDATE, -`WQ Units`) %>%
group_by(MSNAME, `Storm #`, SITENAME, MSNAME, MSNAME__1) %>%
summarise(value = mean(`WQ Analysis Value`)) %>%
ungroup %>%
select(-MSNAME) %>%
unique
datjn[c(210, 280, 285), ]
dat %>%
left_join(tab, by = 'MSNAME') %>%
select(-SAMPLEDATE, -`WQ Units`) %>%
group_by(`Storm #`, SITENAME, MSNAME, MSNAME__1) %>%
summarise(value = mean(`WQ Analysis Value`)) %>%
ungroup %>%
select(-MSNAME) %>%
unique %>%
spread(MSNAME__1, value)
datjn <- dat %>%
left_join(tab, by = 'MSNAME') %>%
select(-SAMPLEDATE, -`WQ Units`) %>%
# group_by(`Storm #`, SITENAME, MSNAME, MSNAME__1) %>%
# summarise(value = mean(`WQ Analysis Value`)) %>%
# ungroup %>%
select(-MSNAME) %>%
unique %>%
spread(MSNAME__1, value)
dat %>%
left_join(tab, by = 'MSNAME') %>%
select(-SAMPLEDATE, -`WQ Units`) %>%
rename(value = `WQ Analysis Value`) %>%
# group_by(`Storm #`, SITENAME, MSNAME, MSNAME__1) %>%
# summarise(value = mean(`WQ Analysis Value`)) %>%
# ungroup %>%
select(-MSNAME) %>%
unique %>%
spread(MSNAME__1, value)
datjn <- dat %>%
left_join(tab, by = 'MSNAME') %>%
select(-SAMPLEDATE, -`WQ Units`) %>%
rename(value = `WQ Analysis Value`) %>%
# group_by(`Storm #`, SITENAME, MSNAME, MSNAME__1) %>%
# summarise(value = mean(`WQ Analysis Value`)) %>%
# ungroup %>%
select(-MSNAME) %>%
unique
dat[c(193, 194),]
dat[c(151, 172, 331),]
dat[c(151, 171, 331),]
datjn <- dat %>%
left_join(tab, by = 'MSNAME') %>%
select(-SAMPLEDATE, -`WQ Units`) %>%
rename(value = `WQ Analysis Value`)
head(datjn)
datjn <- dat %>%
left_join(tab, by = 'MSNAME') %>%
select(-SAMPLEDATE, -`WQ Units`, -MSNAME)
library(tidyverse)
library(readxl)
dat <- read_excel('Z:/MarcusBeck/From Nabiul/I_O.xlsx')
tab <- read_excel('Z:/MarcusBeck/From Nabiul/New_Name.xlsx')
datjn <- dat %>%
left_join(tab, by = 'MSNAME')
head(datjn)
datjn <- dat %>%
left_join(tab, by = 'MSNAME') %>%
select(-SAMPLEDATE, -`WQ Units`, -MSNAME)
head(datjn)
dim(datjn)
dim(unique(datjn))
datjn <- dat %>%
left_join(tab, by = 'MSNAME') %>%
select(-SAMPLEDATE, -`WQ Units`, -MSNAME) %>%
group_by(`Storm #`, SITENAME, MSNAME, MSNAME__1, substation) %>%
summarise(value = mean(`WQ Analysis Value`)) %>%
ungroup
datjn <- dat %>%
left_join(tab, by = 'MSNAME') %>%
select(-SAMPLEDATE, -`WQ Units`, -MSNAME) %>%
group_by(`Storm #`, SITENAME, MSNAME__1, substation) %>%
summarise(value = mean(`WQ Analysis Value`)) %>%
ungroup
dim(datjn)
head(datjn)
datjn <- dat %>%
left_join(tab, by = 'MSNAME') %>%
select(-SAMPLEDATE, -`WQ Units`, -MSNAME) %>%
group_by(`Storm #`, SITENAME, MSNAME__1, substation) %>%
summarise(value = mean(`WQ Analysis Value`)) %>%
ungroup %>%
spread(MSNAME__1, value)
head(datjn)
View(datjn)
ecdf(datjn$Effluent)
ecdf(datjn$Effluent) %>% plot
ecdf(log(datjn$Effluent)) %>% plot
plot(Effluent ~ Influent, datjn)
tmp <- ecdf(datjn$Effluent)
names(tmp)
tmp
predict(Tmp)
predict(tmp)
?ecdf
tmp()
tmp(1:100)
tmp()
tmp(datjn$Effluent)
datjn <- dat %>%
left_join(tab, by = 'MSNAME') %>%
select(-SAMPLEDATE, -`WQ Units`, -MSNAME) %>%
group_by(`Storm #`, SITENAME, MSNAME__1, substation) %>%
summarise(value = mean(`WQ Analysis Value`)) %>%
ungroup %>%
spread(MSNAME__1, value)
ecdfin <- ecdf(datjn$Influent)
ecdfef <- ecdf(datjn$Effluent)
datjn <- dajn %>%
mutate(
ecdfin_prd = ecdfin(Influent),
ecdfef_prd = ecdfef(Effluent)
)
datjn <- dat %>%
left_join(tab, by = 'MSNAME') %>%
select(-SAMPLEDATE, -`WQ Units`, -MSNAME) %>%
group_by(`Storm #`, SITENAME, MSNAME__1, substation) %>%
summarise(value = mean(`WQ Analysis Value`)) %>%
ungroup %>%
spread(MSNAME__1, value)
ecdfin <- ecdf(datjn$Influent)
ecdfef <- ecdf(datjn$Effluent)
datjn <- datjn %>%
mutate(
ecdfin_prd = ecdfin(Influent),
ecdfef_prd = ecdfef(Effluent)
)
head(datjn)
plot(ecdfin_prd ~ Influence, datjn)
plot(ecdfin_prd ~ Influent, datjn)
plot(ecdfin_prd ~ log10(Influent), datjn)
points(log10(datjn$Effluent), datjn$Effluent)
p <- plot_ly(z = ~volcano, type = 'surface')
p <- bscols(
state_hist,
state_map
)
p <- plot_ly(z = ~volcano, type = 'surface')
tmpFile <- tempfile(fileext = ".png")
export(p, file = tmpFile)
?plotly_IMAGE
class(p)
p
library(crosstalk)
# create a shareddata object from states
sts <- SharedData$new(states)
# create sf object for states, estimate and add area
states <- st_as_sf(map('state', plot = F, fill = T))
area <- st_area(states)
area <- as.numeric(area) / (1000^2)
states$area <- area
# Chunk 1
knitr::opts_chunk$set(fig.path = '../img/', message = F, warning = F)
library(tidyverse)
library(maps)
library(sf)
library(raster)
library(tmap)
library(micromap)
library(ggrepel)
library(plotly)
# Chunk 4
library(plotly)
p <- plot_ly(data = iris, x = ~Sepal.Length, y = ~Petal.Length)
tmpFile <- tempfile(fileext = ".png")
export(p, file = tmpFile)
# Chunk 6
p <- ggplot(data = iris, aes(x = Petal.Width, fill = Species)) +
geom_histogram()
p <- ggplotly(p)
tmpFile <- tempfile(fileext = ".png")
export(p, file = tmpFile)
# Chunk 9
# create sf object for states, estimate and add area
states <- st_as_sf(map('state', plot = F, fill = T))
area <- st_area(states)
area <- as.numeric(area) / (1000^2)
states$area <- area
# Chunk 11
p <- plot_ly(states)
tmpFile <- tempfile(fileext = ".png")
export(p, file = tmpFile)
# Chunk 13
p <- plot_ly(states, split = ~ID, color = ~ area, showlegend = F, alpha = 1)
tmpFile <- tempfile(fileext = ".png")
export(p, file = tmpFile)
# Chunk 15
p <- plot_ly(states, split = ~ID, color = ~ area, colors = 'PiYG', showlegend = F, alpha = 1)
tmpFile <- tempfile(fileext = ".png")
export(p, file = tmpFile)
# Chunk 17
library(crosstalk)
# create a shareddata object from states
sts <- SharedData$new(states)
# Chunk 18
# histogram of area
state_hist <- plot_ly(sts, x = ~ area) %>%
add_histogram(xbins = list(start = 0, end = 1e6, size = 1e4)) %>%
layout(barmode = "overlay") %>%
highlight(on = "plotly_selected", persistent = TRUE)
# state map, we're not mapping area anymore
state_map <- plot_ly(sts) %>%
highlight(persistent = T, dynamic = T)
p <- bscols(
state_hist,
state_map
)
p
p <- bscols(
state_hist,
state_map
)
tmpFile <- tempfile(fileext = ".png")
export(p, file = tmpFile)
# load sp library for meuse data
library(sp)
data(meuse)
# create sf object for meuse
dat <- st_as_sf(meuse, coords = c('x', 'y'), crs = "+init=epsg:28992")
# create a shareddata object for meuse
datshr <- SharedData$new(dat)
# scatterplot
meuse_sct <- plot_ly(datshr, x = ~ elev, y = ~ cadmium) %>%
add_markers() %>%
highlight(on = "plotly_selected", persistent = TRUE)
# map
meuse_map <- plot_ly(datshr) %>%
highlight(persistent = T, dynamic = T)
# combine scatterplot and map
bscols(
meuse_sct,
meuse_map
)
library(mapview)
p <- mapview(breweries)
tmpFile <- tempfile(fileext = ".png")
export(p, file = tmpFile)
mapview(breweries)
p <- mapview(states, zcol= "area")
tmpFile <- tempfile(fileext = ".png")
export(p, file = tmpFile)
mapview(states, zcol= "area")
a
plot_ly(z = ~volcano, type = 'surface')
?export
?tempfile
